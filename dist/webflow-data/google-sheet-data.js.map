{
  "version": 3,
  "sources": ["../../src/webflow-data/google-sheet-data.ts"],
  "sourcesContent": ["\n/*\n * google-sheet-data\n *\n * Sygnal Technology Group\n * https://www.sygnal.com\n *\n * Extracts information from Google Sheets, and returns as JSON\n */\n\n//import { csvToData } from '../modules/webflow-data.js';\n//import { csvToObjects } from '../modules/webflow-data-csv.js';\n// import { getCsvAsData } from '../modules/webflow-data.js';\n/*\nexport var loadGoogleSheetFromSpec = function (spec) {\n\n    switch (spec.version) {\n        default:\n        case \"1\":\n\n            return getCsvAsData(spec.url);\n//            return getGoogleSheetDataUrl(spec.url);\n\n            break;\n    }\n//    console.log(spec);\n\n    // Validate spec\n    // TODO: cast to options-style object? \n\n//    spec.url\n}\n*/\n// Returns a Url to retrieve the CSV version of a Google Sheet\n// The sheet must be publicly accessible.\nexport var getGoogleSheetCsvUrl = function (id) {\n\n    return `https://docs.google.com/spreadsheets/d/${id}/export?format=csv`;\n}\n\n// Returns all data as JSON from Sheet1\nexport var getGoogleSheetData = function (id) {\n\n    return new Promise((resolve, reject) => {\n\n        var url = getGoogleSheetCsvUrl(id);\n        console.log(url);\n\n        var json = getCsvAsData(\n            getGoogleSheetCsvUrl(id)\n        );\n\n        resolve(json);\n\n    });\n}\n\n// Returns all data as JSON from Sheet1\nexport var getGoogleSheetDataUrl = function (url) {\n\n    return new Promise((resolve, reject) => {\n\n        console.log(url);\n\n        var json = getCsvAsData(\n            url\n        );\n\n        resolve(json);\n\n    });\n}"],
  "mappings": ";;AAmCO,MAAI,uBAAuB,SAAU,IAAI;AAE5C,WAAO,0CAA0C;AAAA,EACrD;AAGO,MAAI,qBAAqB,SAAU,IAAI;AAE1C,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEpC,UAAI,MAAM,qBAAqB,EAAE;AACjC,cAAQ,IAAI,GAAG;AAEf,UAAI,OAAO;AAAA,QACP,qBAAqB,EAAE;AAAA,MAC3B;AAEA,cAAQ,IAAI;AAAA,IAEhB,CAAC;AAAA,EACL;AAGO,MAAI,wBAAwB,SAAU,KAAK;AAE9C,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEpC,cAAQ,IAAI,GAAG;AAEf,UAAI,OAAO;AAAA,QACP;AAAA,MACJ;AAEA,cAAQ,IAAI;AAAA,IAEhB,CAAC;AAAA,EACL;",
  "names": []
}
