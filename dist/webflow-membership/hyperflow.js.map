{
  "version": 3,
  "sources": ["../../src/webflow-membership/hyperflow.ts"],
  "sourcesContent": ["\n/*\n * SA5 \n * webflow-membership\n * Hyperflow\n * \n * Sygnal Technology Group\n * https://www.sygnal.com\n * \n * User Account Information Utilities\n */\n\n// import { XXH64 } from '../webflow-crypto';\n// import { toTitleCase, getCookie } from '../utils';\n//import { WfuDebug } from './webflow-core.js';\n\nimport { Sa5Core } from '../webflow-core';\nimport { Sa5Debug } from '../webflow-core/debug';\nimport { Sa5UserAccounts } from '../webflow-membership';\nimport { Sa5User } from './user';\n\n    \n\n\n/*\n * Access Groups class.\n */\n\n//import Md5 from \"crypto-api/src/hasher/md5\"; \nexport class Sa5UserHyperflow {\n\n    membership: Sa5UserAccounts;\n    accessGroups: string[] = [];\n\n    constructor(membership: Sa5UserAccounts) {\n        this.membership = membership; \n    }\n\n    async initAsync() { \n\nconsole.log(\"initAsync\"); \n\n        // Determine access group access\n        console.log(await this.getCurrentUserAsync());\n  \n        // Iterate and check\n\n        // this.hasAccessGroup(\"webflow\");\n        // this.hasAccessGroup(\"client\");\n    }\n\n    async getCurrentUserAsync() {\n\n//        this.accessGroups = []; // Object.create(null); \n        // this.accessGroups.push({ key: \"webflow\", access: false });\n        // this.accessGroups.push({ key: \"webflow-2\", access: false });\n        // this.accessGroups.push({ key: \"client\", access: false });\n\n\n\n        const response = await fetch(\n          `${this.membership.config.hf.currentUserUrl}`\n          );\n//      console.log(`redirected: ${response.redirected}`);\n    \n      console.log('STATUS:', response.status); \n      \n      const raw = await response.json(); \n\n      console.log(raw); \n\n\n\n// Parse this Puppy\n/*\n{\n  id: \"658d2c967a397cda826ac938\",\n  createdOn: \"2023-12-28T08:06:46.759Z\",\n  lastUpdated: \"2023-12-28T21:58:28.281Z\",\n  isEmailVerified: true,\n  lastLogin: \"2023-12-28T08:07:35.407Z\",\n  data: {\n    country: null,\n    city: null,\n    webflow-micro-consulting: false,\n    webflow-mc-account: null,\n    wmc-map-url: null,\n    bio: null,\n    name: \"Michael\",\n    email: \"memetican@gmail.com\",\n    accept-communications: true,\n    accept-privacy: true\n  },\n  status: \"verified\",\n  accessGroups: [\n    {\n      slug: \"webflow-support\",\n      type: \"admin\"\n    }\n  ]\n}\n*/\n\n\n\n\n\n//         for (let group of this.membership.config.accessGroups) {\n// //            let hasAccess: boolean = await this.checkAccessGroupAsync(group);\n//             if(hasAccess)\n//                 this.accessGroups.push(group);\n//         }\n\n      //  accessGroups.webflow = false;\n      //  accessGroups[\"webflow-2\"] = false;\n      //  accessGroups.push({\"client\": false});\n      //  accessGroups = {...accessGroups, [\"client\"]: false}; \n      \n    //   this.accessGroups.forEach((element, index) => {\n    //     this.accessGroups[index].access = true;\n    //     });\n        \n        /*\n      const accessGroups = {\n          \"webflow\": false,\n          \"webflow-2\": false,\n          \"client\": false\n        };\n      */\n        \n      //  const ag = accessGroups.map(\n      //x => Object.assign({}, accessGroups, {\"hasAccess\": \"true\"})\n      //  ); \n        \n//        return this.accessGroups; // \n    }\n\n}\n\n"],
  "mappings": ";;AA6BO,MAAM,mBAAN,MAAuB;AAAA,IAK1B,YAAY,YAA6B;AAFzC,0BAAyB,CAAC;AAGtB,WAAK,aAAa;AAAA,IACtB;AAAA,IAEA,MAAM,YAAY;AAEtB,cAAQ,IAAI,WAAW;AAGf,cAAQ,IAAI,MAAM,KAAK,oBAAoB,CAAC;AAAA,IAMhD;AAAA,IAEA,MAAM,sBAAsB;AASxB,YAAM,WAAW,MAAM;AAAA,QACrB,GAAG,KAAK,WAAW,OAAO,GAAG;AAAA,MAC7B;AAGJ,cAAQ,IAAI,WAAW,SAAS,MAAM;AAEtC,YAAM,MAAM,MAAM,SAAS,KAAK;AAEhC,cAAQ,IAAI,GAAG;AAAA,IAkEjB;AAAA,EAEJ;",
  "names": []
}
