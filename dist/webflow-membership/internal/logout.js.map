{
  "version": 3,
  "sources": ["../../../src/webflow-membership/internal/logout.ts"],
  "sourcesContent": ["\n\n\nclass WebflowUsysLogout extends WebflowUsysRequest {\n\n    constructor() {\n        super(); \n    }\n\n//    mutation UserLogoutRequest {\\n  usysDestroySession {\\n    ok\\n    __typename\\n  }\\n}\\n\n    override get requestGql(): string {\n        return `\n            mutation UserLogoutRequest {\n                usysDestroySession {\n                    ok\n                    __typename\n                }\n            }\n        `;\n    }\n\n    override get requestObj(): object {\n        return [\n            {\n                operationName: \"GetFieldValidations\",\n                variables: {\n                },\n                query: this.requestGql\n            }\n        ];\n    }\n\n}\n\n\n/* \n      function logout() {\n        \n        // Sa5.usys.logout() \n// Must inject into the page\n// This code cannot be run from a CDN due to same-site restrictions \n\n        fetch('/.wf_graphql/csrf', {\n          method: 'POST',\n          headers: {\n            'X-Requested-With': 'XMLHttpRequest'\n          }\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"CSRF Response:\", data);\n      \n          // Extract the wf-csrv cookie value\n          let csrfToken = document.cookie.split('; ')\n            .find(row => row.startsWith('wf-csrf='))\n            .split('=')[1];\n      \n          // After the first request, make the second POST request to `/.wf_graphql/usys/apollo`:\n          return fetch('/.wf_graphql/usys/apollo', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json',\n                  'X-Wf-Csrf': csrfToken\n              },\n              body: JSON.stringify([{\n                  \"operationName\": \"UserLogoutRequest\",\n                  \"variables\": {},\n                  \"query\": \"mutation UserLogoutRequest {\\n  usysDestroySession {\\n    ok\\n    __typename\\n  }\\n}\\n\"\n              }])\n          });\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"Apollo Response:\", data);\n          console.log(JSON.stringify(data))\n//            window.location.href = '/';\n\n          // Successful logout response:\n//          [{\"data\":{\"usysDestroySession\":{\"ok\":true,\"__typename\":\"usys_destroy_session_response\"}}}]\n          \n          /*\n          [\n    {\n        \"data\": {\n            \"usysDestroySession\": {\n                \"ok\": true,\n                \"__typename\": \"usys_destroy_session_response\"\n            }\n        }\n    }\n]\n*/ \n          \n          \n          /*\n        })\n        .catch(error => {\n          console.error(\"Error:\", error);\n        });\n  \n  \n //         alert('logout.'); \n      }\n      \n      */  "],
  "mappings": ";;AAGA,MAAM,oBAAN,cAAgC,mBAAmB;AAAA,IAE/C,cAAc;AACV,YAAM;AAAA,IACV;AAAA,IAGA,IAAa,aAAqB;AAC9B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQX;AAAA,IAEA,IAAa,aAAqB;AAC9B,aAAO;AAAA,QACH;AAAA,UACI,eAAe;AAAA,UACf,WAAW,CACX;AAAA,UACA,OAAO,KAAK;AAAA,QAChB;AAAA,MACJ;AAAA,IACJ;AAAA,EAEJ;",
  "names": []
}
