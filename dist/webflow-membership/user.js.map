{
  "version": 3,
  "sources": ["../../src/webflow-crypto.ts", "../../src/utils.ts", "../../src/webflow-membership/user.ts"],
  "sourcesContent": ["\n/*\n * webflow-crypto\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Hashing & Cryptographic Utilities\n */\n\n// xxhash64 implementation\n// Copyright 2019-2020, Yann Collet <github.com/Cyan4973>\n// Copyright 2016, Pierre Curto <github.com/pierrec>\n// Copyright 2019, Daniel Lo Nigro <github.com/Daniel15>\n// Copyright 2021, intrnl <github.com/intrnl> \n// https://codeberg.org/intrnl/js-xxhash64/src/branch/trunk/src/index.js \n\n\nconst PRIME64_1 = 11400714785074694791n;\nconst PRIME64_2 = 14029467366897019727n;\nconst PRIME64_3 = 1609587929392839161n;\nconst PRIME64_4 = 9650029242287828579n;\nconst PRIME64_5 = 2870177450012600261n;\n\nconst BITS = 64n;\nconst BITMASK = 2n ** BITS - 1n;\n\nconst encoder = new TextEncoder();\n\nfunction bitsToBigInt (a00, a16, a32, a48) {\n\treturn (\n\t\t(BigInt(a00)) |\n\t\t(BigInt(a16) << 16n) |\n\t\t(BigInt(a32) << 32n) |\n\t\t(BigInt(a48) << 48n)\n\t);\n}\n\nfunction memoryToBigInt(memory, offset) {\n\treturn (\n\t\t(BigInt(memory[offset])) |\n\t\t(BigInt(memory[offset+1]) << 8n) |\n\t\t(BigInt(memory[offset+2]) << 16n) |\n\t\t(BigInt(memory[offset+3]) << 24n) |\n\t\t(BigInt(memory[offset+4]) << 32n) |\n\t\t(BigInt(memory[offset+5]) << 40n) |\n\t\t(BigInt(memory[offset+6]) << 48n) |\n\t\t(BigInt(memory[offset+7]) << 56n)\n\t);\n}\n\nfunction rotl (value, rotation) {\n\treturn (\n\t\t((value << rotation) & BITMASK) |\n\t\t(value >> (BITS - rotation))\n\t);\n}\n\nfunction trunc (value) {\n\treturn BigInt.asUintN(64, value);\n}\n\n\nexport class XXH64 {\n\t#seed;\n\t#v1;\n\t#v2;\n\t#v3;\n\t#v4;\n\n\t#memory;\n\n\t#len;\n\t#memsize;\n\n\tconstructor (seed = 0) {\n\t\tthis.reset(seed);\n\t}\n\n\treset (seed = this.#seed) {\n\t\tthis.#seed = BigInt.asUintN(32, BigInt(seed));\n\t\tthis.#v1 = trunc(this.#seed + PRIME64_1 + PRIME64_2);\n\t\tthis.#v2 = trunc(this.#seed + PRIME64_2);\n\t\tthis.#v3 = this.#seed;\n\t\tthis.#v4 = trunc(this.#seed - PRIME64_1);\n\n\t\tthis.#memory = null;\n\n\t\tthis.#len = 0;\n\t\tthis.#memsize = 0;\n\n\t\treturn this;\n\t}\n\n\tupdate (input) {\n\t\tif (typeof input === 'string') {\n\t\t\tinput = encoder.encode(input);\n\t\t}\n\n\t\tlet p = 0;\n\t\tlet len = input.length;\n\t\tlet bEnd = p + len;\n\n\t\tif (len === 0) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.#len += len;\n\n\t\tif (this.#memsize === 0) {\n\t\t\tthis.#memory = new Uint8Array(32);\n\t\t}\n\n\t\tif (this.#memsize + len < 32) {\n\t\t\tthis.#memory.set(input.subarray(0, len), this.#memsize);\n\n\t\t\tthis.#memsize += len;\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this.#memsize > 0) {\n\t\t\tthis.#memory.set(input.subarray(0, 32 - this.#memsize), this.#memsize);\n\n\t\t\tlet p64 = 0;\n\t\t\tlet other;\n\n\t\t\tother = memoryToBigInt(this.#memory, p64);\n\t\t\tthis.#v1 = trunc(rotl(trunc(this.#v1 + other * PRIME64_2), 31n) * PRIME64_1);\n\n\t\t\tp64 += 8\n\t\t\tother = memoryToBigInt(this.memory, p64)\n\t\t\tthis.#v2 = trunc(rotl(trunc(this.#v2 + other * PRIME64_2), 31n) * PRIME64_1);\n\n\t\t\tp64 += 8\n\t\t\tother = memoryToBigInt(this.memory, p64)\n\t\t\tthis.#v3 = trunc(rotl(trunc(this.#v3 + other * PRIME64_2), 31n) * PRIME64_1);\n\n\t\t\tp64 += 8\n\t\t\tother = memoryToBigInt(this.memory, p64)\n\t\t\tthis.#v4 = trunc(rotl(trunc(this.#v4 + other * PRIME64_2), 31n) * PRIME64_1);\n\n\t\t\tp += 32 - this.#memsize;\n\t\t\tthis.#memsize = 0;\n\t\t}\n\n\t\tif (p <= bEnd - 32) {\n\t\t\tconst limit = bEnd - 32;\n\n\t\t\tdo {\n\t\t\t\tlet other;\n\n\t\t\t\tother = memoryToBigInt(input, p)\n\t\t\t\tthis.#v1 = trunc(rotl(trunc(this.#v1 + other * PRIME64_2), 31n) * PRIME64_1);\n\t\t\t\tp += 8\n\n\t\t\t\tother = memoryToBigInt(input, p)\n\t\t\t\tthis.#v2 = trunc(rotl(trunc(this.#v2 + other * PRIME64_2), 31n) * PRIME64_1);\n\t\t\t\tp += 8\n\n\t\t\t\tother = memoryToBigInt(input, p)\n\t\t\t\tthis.#v3 = trunc(rotl(trunc(this.#v3 + other * PRIME64_2), 31n) * PRIME64_1);\n\t\t\t\tp += 8\n\n\t\t\t\tother = memoryToBigInt(input, p)\n\t\t\t\tthis.#v4 = trunc(rotl(trunc(this.#v4 + other * PRIME64_2), 31n) * PRIME64_1);\n\t\t\t\tp += 8\n\t\t\t} while (p <= limit)\n\t\t}\n\n\t\tif (p < bEnd) {\n\t\t\tthis.#memory.set(input.subarray(p, bEnd), this.#memsize);\n\t\t\tthis.#memsize = bEnd - p;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tdigest () {\n\t\tlet input = this.#memory;\n\n\t\tlet bEnd = this.#memsize;\n\t\tlet p = 0;\n\t\tlet h64 = 0n;\n\t\tlet h = 0n;\n\t\tlet u = 0n;\n\n\t\tif (this.#len >= 32) {\n\t\t\th64 = rotl(this.#v1, 1n) + rotl(this.#v2, 7n) + rotl(this.#v3, 12n) + rotl(this.#v4, 18n);\n\n\t\t\th64 = trunc(h64 ^ (rotl(trunc(this.#v1 * PRIME64_2), 31n) * PRIME64_1));\n\t\t\th64 = trunc(h64 * PRIME64_1 + PRIME64_4);\n\n\t\t\th64 = trunc(h64 ^ (rotl(trunc(this.#v2 * PRIME64_2), 31n) * PRIME64_1));\n\t\t\th64 = trunc(h64 * PRIME64_1 + PRIME64_4);\n\n\t\t\th64 = trunc(h64 ^ (rotl(trunc(this.#v3 * PRIME64_2), 31n) * PRIME64_1));\n\t\t\th64 = trunc(h64 * PRIME64_1 + PRIME64_4);\n\n\t\t\th64 = trunc(h64 ^ (rotl(trunc(this.#v4 * PRIME64_2), 31n) * PRIME64_1));\n\t\t\th64 = trunc(h64 * PRIME64_1 + PRIME64_4);\n\t\t}\n\t\telse {\n\t\t\th64 = trunc(this.#seed + PRIME64_5);\n\t\t}\n\n\t\th64 += BigInt(this.#len);\n\n\t\twhile (p <= bEnd - 8) {\n\t\t\tu = memoryToBigInt(input, p);\n\t\t\tu = trunc(rotl(trunc(u * PRIME64_2), 31n) * PRIME64_1);\n\n\t\t\th64 = trunc((rotl(h64 ^ u, 27n) * PRIME64_1) + PRIME64_4);\n\t\t\tp += 8;\n\t\t}\n\n\t\tif (p + 4 <= bEnd) {\n\t\t\tu = bitsToBigInt((input[p+1] << 8) | input[p], (input[p+3] << 8) | input[p+2], 0, 0);\n\t\t\th64 = trunc((rotl(h64 ^ trunc((u * PRIME64_1)), 23n) * PRIME64_2) + PRIME64_3);\n\t\t\tp += 4;\n\t\t}\n\n\t\twhile (p < bEnd) {\n\t\t\tu = bitsToBigInt(input[p++], 0, 0, 0);\n\t\t\th64 = trunc(rotl(h64 ^ trunc(u * PRIME64_5), 11n) * PRIME64_1);\n\t\t}\n\n\t\th = trunc(h64 >> 33n);\n\t\th64 = trunc((h64 ^ h) * PRIME64_2);\n\n\t\th = trunc(h64 >> 29n);\n\t\th64 = trunc((h64 ^ h) * PRIME64_3);\n\n\t\th = trunc(h64 >> 32n);\n\t\th64 = trunc(h64 ^ h);\n\n\t\treturn h64;\n\t}\n\n    static hash (input, seed = 0) {\n        return new XXH64(seed).update(input).digest()\n            .toString(16); // Hex\n    }    \n\n}\n\n\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import \n// https://www.npmjs.com/package/blueimp-md5-es6\n// https://github.com/pvorb/node-md5/issues/52 \n// https://code.tutsplus.com/tutorials/how-to-hash-and-decrypt-with-md5-in-javascript--cms-38297\n// import CryptoJS from ''; \n\n// import * as md5 from 'https://cdnjs.cloudflare.com/ajax/libs/blueimp-md5/2.19.0/js/md5.min.js';\n\n// const toUtf8_1 = require(\"https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/toUtf8.js\");\nconst PRIME32_1 = 2654435761;\nconst PRIME32_2 = 2246822519;\nconst PRIME32_3 = 3266489917;\nconst PRIME32_4 = 668265263;\nconst PRIME32_5 = 374761393;\n\n// https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/toUtf8.js \n\nfunction toUtf8_1(text) {\n    const bytes = [];\n    const w = new Array(4);\n    const h = [0x00, 0xc0, 0xe0, 0xf0];\n    const m = [0x7f, 0x3f, 0x3f, 0x3f];\n    const p = [0x00, 0x80, 0x80, 0x80];\n    for (const char of text) {\n        const b = w;\n        const cp = char.codePointAt(0);\n        const n = 0\n            - ((-(cp & 0xffffff80) >> 31))\n            - ((-(cp & 0xfffff800) >> 31))\n            - ((-(cp & 0xffff0000) >> 31));\n        const z = m[n];\n        const y = p[n];\n        b[3] = y | (cp & z);\n        b[2] = y | ((cp >>> 6) & z);\n        b[1] = y | ((cp >>> 12) & z);\n        b[0] = y | ((cp >>> 18) & z);\n        const s = 3 - n;\n        b[s] |= h[n];\n        Array.prototype.push.apply(bytes, b.slice(s));\n    }\n    return new Uint8Array(bytes);\n}\n\n\n\nexport class XXH32 {\n\n    /**\n     *\n     * @param buffer - byte array or string\n     * @param seed - optional seed (32-bit unsigned);\n     */\n    // https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/xxHash32.js\n\n    static hash(buffer, seed = 0) {\n        buffer = typeof buffer === 'string' ? toUtf8_1(buffer) : buffer;\n        const b = buffer;\n        /*\n            Step 1. Initialize internal accumulators\n            Each accumulator gets an initial value based on optional seed input. Since the seed is optional, it can be 0.\n\n            ```\n                u32 acc1 = seed + PRIME32_1 + PRIME32_2;\n                u32 acc2 = seed + PRIME32_2;\n                u32 acc3 = seed + 0;\n                u32 acc4 = seed - PRIME32_1;\n            ```\n            Special case : input is less than 16 bytes\n            When input is too small (< 16 bytes), the algorithm will not process any stripe. Consequently, it will not\n            make use of parallel accumulators.\n\n            In which case, a simplified initialization is performed, using a single accumulator :\n\n            u32 acc  = seed + PRIME32_5;\n            The algorithm then proceeds directly to step 4.\n        */\n        let acc = (seed + PRIME32_5) & 0xffffffff;\n        let offset = 0;\n        if (b.length >= 16) {\n            const accN = [\n                (seed + PRIME32_1 + PRIME32_2) & 0xffffffff,\n                (seed + PRIME32_2) & 0xffffffff,\n                (seed + 0) & 0xffffffff,\n                (seed - PRIME32_1) & 0xffffffff,\n            ];\n            /*\n                Step 2. Process stripes\n                A stripe is a contiguous segment of 16 bytes. It is evenly divided into 4 lanes, of 4 bytes each.\n                The first lane is used to update accumulator 1, the second lane is used to update accumulator 2, and so on.\n\n                Each lane read its associated 32-bit value using little-endian convention.\n\n                For each {lane, accumulator}, the update process is called a round, and applies the following formula :\n\n                ```\n                accN = accN + (laneN * PRIME32_2);\n                accN = accN <<< 13;\n                accN = accN * PRIME32_1;\n                ```\n\n                This shuffles the bits so that any bit from input lane impacts several bits in output accumulator.\n                All operations are performed modulo 2^32.\n\n                Input is consumed one full stripe at a time. Step 2 is looped as many times as necessary to consume\n                the whole input, except the last remaining bytes which cannot form a stripe (< 16 bytes). When that\n                happens, move to step 3.\n            */\n            const b = buffer;\n            const limit = b.length - 16;\n            let lane = 0;\n            for (offset = 0; (offset & 0xfffffff0) <= limit; offset += 4) {\n                const i = offset;\n                const laneN0 = b[i + 0] + (b[i + 1] << 8);\n                const laneN1 = b[i + 2] + (b[i + 3] << 8);\n                const laneNP = laneN0 * PRIME32_2 + (laneN1 * PRIME32_2 << 16);\n                let acc = ((accN[lane] + laneNP) & 0xffffffff);\n                acc = (acc << 13) | (acc >>> 19);\n                const acc0 = acc & 0xffff;\n                const acc1 = acc >>> 16;\n                accN[lane] = (acc0 * PRIME32_1 + (acc1 * PRIME32_1 << 16)) & 0xffffffff;\n                lane = (lane + 1) & 0x3;\n            }\n            /*\n                Step 3. Accumulator convergence\n                All 4 lane accumulators from previous steps are merged to produce a single remaining accumulator\n                of same width (32-bit). The associated formula is as follows :\n\n                ```\n                acc = (acc1 <<< 1) + (acc2 <<< 7) + (acc3 <<< 12) + (acc4 <<< 18);\n                ```\n            */\n            acc = (((accN[0] << 1) | (accN[0] >>> 31))\n                + ((accN[1] << 7) | (accN[1] >>> 25))\n                + ((accN[2] << 12) | (accN[2] >>> 20))\n                + ((accN[3] << 18) | (accN[3] >>> 14))) & 0xffffffff;\n        }\n        /*\n            Step 4. Add input length\n            The input total length is presumed known at this stage. This step is just about adding the length to\n            accumulator, so that it participates to final mixing.\n\n            ```\n            acc = acc + (u32)inputLength;\n            ```\n        */\n        acc = (acc + buffer.length) & 0xffffffff;\n        /*\n            Step 5. Consume remaining input\n            There may be up to 15 bytes remaining to consume from the input. The final stage will digest them according\n            to following pseudo-code :\n            ```\n            while (remainingLength >= 4) {\n                lane = read_32bit_little_endian(input_ptr);\n                acc = acc + lane * PRIME32_3;\n                acc = (acc <<< 17) * PRIME32_4;\n                input_ptr += 4; remainingLength -= 4;\n            }\n            ```\n            This process ensures that all input bytes are present in the final mix.\n        */\n        let limit = buffer.length - 4;\n        for (; offset <= limit; offset += 4) {\n            const i = offset;\n            const laneN0 = b[i + 0] + (b[i + 1] << 8);\n            const laneN1 = b[i + 2] + (b[i + 3] << 8);\n            const laneP = laneN0 * PRIME32_3 + (laneN1 * PRIME32_3 << 16);\n            acc = ((acc + laneP) & 0xffffffff);\n            acc = (acc << 17) | (acc >>> 15);\n            acc = (((acc & 0xffff) * PRIME32_4) + (((acc >>> 16) * PRIME32_4) << 16)) & 0xffffffff;\n        }\n        /*\n            ```\n            while (remainingLength >= 1) {\n                lane = read_byte(input_ptr);\n                acc = acc + lane * PRIME32_5;\n                acc = (acc <<< 11) * PRIME32_1;\n                input_ptr += 1; remainingLength -= 1;\n            }\n            ```\n        */\n        for (; offset < b.length; ++offset) {\n            const lane = b[offset];\n            acc = acc + lane * PRIME32_5;\n            acc = (acc << 11) | (acc >>> 21);\n            acc = (((acc & 0xffff) * PRIME32_1) + (((acc >>> 16) * PRIME32_1) << 16)) & 0xffffffff;\n        }\n        /*\n            Step 6. Final mix (avalanche)\n            The final mix ensures that all input bits have a chance to impact any bit in the output digest,\n            resulting in an unbiased distribution. This is also called avalanche effect.\n            ```\n            acc = acc xor (acc >> 15);\n            acc = acc * PRIME32_2;\n            acc = acc xor (acc >> 13);\n            acc = acc * PRIME32_3;\n            acc = acc xor (acc >> 16);\n            ```\n        */\n        acc = acc ^ (acc >>> 15);\n        acc = ((acc & 0xffff) * PRIME32_2 & 0xffffffff) + ((acc >>> 16) * PRIME32_2 << 16);\n        acc = acc ^ (acc >>> 13);\n        acc = ((acc & 0xffff) * PRIME32_3 & 0xffffffff) + ((acc >>> 16) * PRIME32_3 << 16);\n        acc = acc ^ (acc >>> 16);\n        // turn any negatives back into a positive number;\n        return acc < 0 ? acc + 4294967296 : acc;\n    }\n\n}\n\n//https://cdnjs.com/libraries/crypto-js\n\n// https://cryptojs.gitbook.io/docs/ \n// https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/md5.min.js \n// https://stackoverflow.com/questions/56280825/crypto-js-module-is-imported-but-does-not-work-as-expected \n// import \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/core.min.js\";\n//import * as CryptoJS from \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js\"\n//  import HmacMD5 from \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/hmac-md5.min.js\";\n\n// import * as CryptoJS from \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/md5.js\"; \n\n// import * as XXH from \"https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/xxHash32.js\";\n//import * as xx from \"https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/index.js\"; \n// import { xxHash32 } from \"https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/index.js\";\n// https://cdn.jsdelivr.net/npm/js-xxhash@1.0.4/dist/index.js\n\n// https://github.com/bryc/code/blob/master/jshash/hashes/murmurhash3.js\nfunction MurmurHash3(key, seed = 0) {\n    var k, p1 = 3432918353, p2 = 461845907, h = seed | 0;\n\n    for(var i = 0, b = key.length & -4; i < b; i += 4) {\n        k = key[i+3] << 24 | key[i+2] << 16 | key[i+1] << 8 | key[i];\n        k = Math.imul(k, p1); k = k << 15 | k >>> 17;\n        h ^= Math.imul(k, p2); h = h << 13 | h >>> 19;\n        h = Math.imul(h, 5) + 3864292196 | 0; // |0 = prevent float\n    }\n\n    k = 0;\n    switch (key.length & 3) {\n        case 3: k ^= key[i+2] << 16;\n        case 2: k ^= key[i+1] << 8;\n        case 1: k ^= key[i];\n                k = Math.imul(k, p1); k = k << 15 | k >>> 17;\n                h ^= Math.imul(k, p2);\n    }\n\n    h ^= key.length;\n\n    h ^= h >>> 16; h = Math.imul(h, 2246822507);\n    h ^= h >>> 13; h = Math.imul(h, 3266489909);\n    h ^= h >>> 16;\n\n    return h >>> 0;\n}", "\n/*\n * webflow-utils\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * General Utilities\n */\n\n// https://stackoverflow.com/questions/196972/convert-string-to-title-case-with-javascript\n\n// https://www.w3docs.com/snippets/javascript/how-to-convert-string-to-title-case-with-javascript.html\n\nexport function identifyElement(element: HTMLElement): string {\n    switch (element.tagName) {\n        case 'A': \n            return 'HTMLLinkElement'; \n        case 'INPUT': {\n            const inputElement = element as HTMLInputElement;\n            switch (inputElement.type) {\n\n// BUG: add date types and number types \n\n                case 'checkbox':\n                    return 'HTMLCheckboxElement';\n                case 'radio':\n                    return 'HTMLRadioElement';\n                // case 'text':\n                //     return 'HTMLTextElement';\n                // case 'password':\n                //     return 'HTMLPasswordElement';\n                case 'file':\n                    return 'HTMLFileInputElement';\n                default:\n                    return 'HTMLInputElement';\n            }\n        }\n        case 'SELECT':\n            return 'HTMLSelectElement';\n        case 'TEXTAREA':\n            return 'HTMLTextAreaElement';\n        case 'BUTTON':\n            return 'HTMLButtonElement';\n        default:\n            return 'HTMLElement';\n    }\n}\n\nexport function selectOptionByValue(selectElement: HTMLSelectElement, value: string) {\n    for (let i = 0; i < selectElement.options.length; i++) {\n        if (selectElement.options[i].value === value) {\n            selectElement.options[i].selected = true;\n            break;\n        }\n    }\n}\n\n// Evaluates a string value as boolean \nexport function booleanValue(val: string): boolean {\n    switch (val.toLowerCase()) {\n        case \"false\":\n        case \"f\":\n        case \"\":\n        case \"0\":\n        case \"no\":\n        case \"off\":\n        case undefined: case \"undefined\":\n        case null: case \"null\": \n            return false;\n        default:\n            return true;\n    }\n}\n\nexport function addDays(date: Date, days: number): Date {\n    let result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n}\n\n\nexport function getCookie(name) {\n    var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));\n    if (match) return match[2];\n}\n\n\n\nexport function toTitleCase(str) {\n\n    return str.toLowerCase().split(' ').map(function (word) {\n        return (word.charAt(0).toUpperCase() + word.slice(1));\n    }).join(' ');\n\n}\n\n// How do you JSON.stringify an ES6 Map?\n// https://stackoverflow.com/a/56150320\nexport function jsonMapReplacer(key, value) {\n\n    if(value instanceof Map) {\n        return {\n            dataType: 'Map',\n            value: Array.from(value.entries()), // or with spread: value: [...value]\n        };\n    } else {\n        return value;\n    }\n}\n\n// How do you JSON.stringify an ES6 Map?\n// https://stackoverflow.com/a/56150320\nexport function jsonMapReviver(key, value) {\n\n    console.log (\"reviving\", key, typeof value, value); \n\n    if (typeof value === 'object' && value !== null) {\n        if (value.dataType === 'Map') {\n            return new Map(value.value);\n        }\n    }\n    return value;    \n}\n\n\n// HTML Decode JSON for Select Option element\n// https://tertiumnon.medium.com/js-how-to-decode-html-entities-8ea807a140e5\n// export function decodeHTML(text) {\n//     return $(\"<textarea/>\")\n//       .html(text)\n//       .text();\n// }\nexport function decodeHTML(text: string): string {\n    let parser = new DOMParser();\n    let dom = parser.parseFromString(\n        `<!doctype html><body>${text}`,\n        'text/html');\n    return dom.body.textContent || '';\n}\n\n// https://tertiumnon.medium.com/js-how-to-decode-html-entities-8ea807a140e5\n// export function encodeHTML(text) {\n//     return $(\"<textarea/>\")\n//       .text(text)\n//       .html();\n// }\nexport function encodeHTML(text) {\n    let div = document.createElement('div');\n    div.appendChild(document.createTextNode(text));\n    return div.innerHTML;\n}\n\n// How to check if a number is between two values?\n// https://stackoverflow.com/a/18881828\n// Number.prototype.between = function (a, b, inclusive) {\n//     var min = Math.min(a, b),\n//         max = Math.max(a, b);\n\n//     return inclusive ? this >= min && this <= max : this > min && this < max;\n// }\nexport function between(value: number, a: number, b: number, inclusive: boolean): boolean {\n    let min = Math.min(a, b);\n    let max = Math.max(a, b);\n\n    return inclusive ? value >= min && value <= max : value > min && value < max;\n}\n\n// Handy outerHTML extension function\n// jQuery.fn.outerHTML = function () {\n//     return jQuery('<div />').append(this.eq(0).clone()).html();\n// };\nexport function outerHTML(element) {\n    return element.outerHTML;\n}\n\n\n// Mobile detection\n// https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n// window.mobileCheck = function () {\nexport function isMobile() {\n    let check = false;\n    (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window['opera']);\n    return check;\n};\n\n// How to execute a JavaScript function when I have its name as a string\n// https://stackoverflow.com/a/359910\nexport function executeFunctionByName(functionName, context /*, args */) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    var namespaces = functionName.split(\".\");\n    var func = namespaces.pop();\n    for (var i = 0; i < namespaces.length; i++) {\n        context = context[namespaces[i]];\n    }\n    return context[func].apply(context, args);\n}\n\n// How to execute a JavaScript function when I have its name as a string\n// https://stackoverflow.com/a/4351575 \nexport function executeFunctionByName2(functionName, context /*, args */) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    var namespaces = functionName.split(\".\");\n    var func = namespaces.pop();\n    for (var i = 0; i < namespaces.length; i++) {\n        context = context[namespaces[i]];\n    }\n    return context[func].apply(context, args);\n}\n\n//#region Shuffle\n\n// Shuffles a group of elements in the DOM\n// and also returns a set \nexport function shuffleElements(elements: Element[]): Element[] {\n    const allElems = Array.from(elements);\n    const getRandom = (max: number) => Math.floor(Math.random() * max);\n\n    const shuffled = allElems.map(() => {\n        const random = getRandom(allElems.length);\n        const randEl = allElems[random].cloneNode(true) as Element;\n        allElems.splice(random, 1);\n        return randEl;\n    });\n\n    allElems.forEach((elem, i) => {\n        if (elem.parentNode) {\n            elem.parentNode.replaceChild(shuffled[i], elem);\n        }\n    });\n\n    return shuffled;\n}\n\n// Usage:\n// const elements = document.querySelectorAll('.some-class');\n// const shuffledElements = shuffleElements(Array.from(elements));\n\n//#endregion\n\n/* previous code\n\n// Credit James Padolsey \n// https://css-tricks.com/snippets/jquery/shuffle-dom-elements/\n(function($){\n \n    $.fn.shuffle = function() {\n \n        var allElems = this.get(),\n            getRandom = function(max) {\n                return Math.floor(Math.random() * max);\n            },\n            shuffled = $.map(allElems, function(){\n                var random = getRandom(allElems.length),\n                    randEl = $(allElems[random]).clone(true)[0];\n                allElems.splice(random, 1);\n                return randEl;\n           });\n \n        this.each(function(i){\n            $(this).replaceWith($(shuffled[i]));\n        });\n \n        return $(shuffled);\n \n    };\n \n})(jQuery);\n*/\n\n\n//#region IFRAMES\n\nexport function autosizeIFrames(): void {\n    // Identify all IFRAMES with autosize tag\n    const iframes = Array.from(\n        // BUG: weird tagging \n        document.querySelectorAll(\"iframe[wfu='html.iframe.autofit']\")\n        );\n\n    iframes.forEach((iframe: HTMLIFrameElement) => {\n        // Add event listener and wait for content to load\n        iframe.addEventListener('load', () => {\n            setInterval(() => {\n                if (iframe.contentDocument) {\n                    iframe.style.height = `${iframe.contentDocument.body.scrollHeight}px`;\n                }\n            }, 200);\n        });\n    });\n};\n\n/* prev\n\nexport var autosizeIFrames = function () {\n\n    // Identify all IFRAMES with autosize tag\n    let iframes = $(\"iframe[wfu='html.iframe.autofit']\");\n\n    iframes.each(function (index) {\n\n        var iframe = this;\n\n        // Add event listener and wait for content to load\n        this.addEventListener('load', function () {\n            setInterval(function () {\n                iframe.style.height = iframe.contentDocument.body.scrollHeight + 'px';\n            }, 200);\n        });\n\n    });\n\n}\n\n*/\n\n//#endregion\n\n\n//#region Dynamic Attributes\n\n// Applies custom attributes to HTML elements throughout the page\n// from relatively-positioned <data> elements.\n\n\nexport function applyDynamicAttributes(): void {\n\n    // Find all <data> elements which specify a data-source for data binding\n    const dynamicAttributeDatas = Array.from(\n        document.querySelectorAll('data[wfu-attr]')\n        );\n\n    // Iterate and bind each individually\n    dynamicAttributeDatas.forEach((data: HTMLElement) => {\n\n        // Webflow wraps EMBEDS in a DIV, so we work from that parent as a positional reference\n        const dataContainer = data.parentElement;\n\n        // hide this node\n        if (dataContainer) {\n            dataContainer.style.display = 'none';\n        }\n\n        let target: HTMLElement | null = null;\n\n        // Webflow wraps EMBEDS in a DIV[wf-embed], so we work from that parent as a reference\n        switch (data.getAttribute('wfu-attr-target')) {\n            case 'prev':\n                target = dataContainer?.previousElementSibling as HTMLElement;\n                break;\n            case 'next':\n                target = dataContainer?.nextElementSibling as HTMLElement;\n                break;\n            case 'parent':\n                target = dataContainer?.parentElement;\n                break;\n            default:\n                console.warn('Unknown apply setting for param.');\n        }\n\n        // Apply attribute\n        if (target) {\n            target.setAttribute(data.getAttribute('wfu-attr') || '', data.getAttribute('wfu-attr-val') || '');\n        }\n\n    });\n};\n\n\n/*\n\n\nexport var applyDynamicAttributes = function () {\n\n    // Find all <data> elements which specify a data-source\n    // for data binding\n    var dynamicAttributeDatas = $('data[wfu-attr]');\n\n    // Iterate and bind each individually\n    $.each(dynamicAttributeDatas, function (i, elem) {\n\n        var data = this;\n\n        // Webflow wraps EMBEDS in a DIV, so we work from that parent as a positional reference\n        var dataContainer = $(data).parent();\n\n        // hide this node\n        $(dataContainer).attr(\"style\", \"display: none;\");\n\n        var target = null;\n\n        // Webflow wraps EMBEDS in a DIV[wf-embed], so we work from that parent as a reference\n        switch ($(data).attr(\"wfu-attr-target\")) {\n            case \"prev\":\n                target = $(dataContainer).prev();\n                break;\n            case \"next\":\n                target = $(dataContainer).next();\n                break;\n            case \"parent\":\n                target = $(dataContainer).parent();\n                break;\n            default:\n\n                if (vars.logging)\n                    console.warn(\"Unknown apply setting for param.\");\n        }\n\n        // Apply attribute\n        var dataItem = this;\n        $(target).attr(\n            $(dataItem).attr(\"wfu-attr\"),\n            $(dataItem).attr(\"wfu-attr-val\")\n        );\n\n    });\n\n}\n\n*/\n\n//#endregion\n\n\n\n\n//#region Data Formatting\n\nexport const formatJson = (data: any): string | undefined => {\n    let json;\n\n    // Convert JSON to string\n    if (typeof data !== 'string') {\n        json = JSON.stringify(data, undefined, 2);\n    }\n\n    return json;\n}\n\nexport const formatJsonAsHtml = (data: any): string => {\n    // Convert JSON to string\n    let json = formatJson(data);\n\n    json = json?.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n    // Add JSON styling classes\n    return json?.replace(\n        /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n        (match) => {\n            let cls = 'wfu-json-number';\n            if (/^\"/.test(match)) {\n                if (/:$/.test(match)) {\n                    cls = 'wfu-json-key';\n                } else {\n                    cls = 'wfu-json-string';\n                }\n            } else if (/true|false/.test(match)) {\n                cls = 'wfu-json-boolean';\n            } else if (/null/.test(match)) {\n                cls = 'wfu-json-null';\n            }\n            return `<span class=\"${cls}\">${match}</span>`;\n        }) || '';\n}\n\nexport const displayDataAsHtml = (el: HTMLElement, data: any): void => {\n    // Create <pre> element\n    const pre = document.createElement('pre');\n    pre.className = 'wfu-code';\n\n    // Populate <pre> element with formatted JSON data\n    pre.innerHTML = formatJsonAsHtml(data);\n\n    // Append <pre> element to the target element\n    el.innerHTML = '';\n    el.appendChild(pre);\n}\n\n/*\n\nexport var formatJson = function (data) {\n\n    var json;\n\n    // Convert JSON to string\n    if (typeof data != 'string') {\n        json = JSON.stringify(data, undefined, 2);\n    }\n\n    return json;\n}\n\nexport var formatJsonAsHtml = function (data) {\n\n    // Convert JSON to string\n    var json = formatJson(data);\n\n    json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n    // Add JSON styling classes\n    return json.replace(\n        /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\n        function (match) {\n            var cls = 'wfu-json-number';\n            if (/^\"/.test(match)) {\n                if (/:$/.test(match)) {\n                    cls = 'wfu-json-key';\n                } else {\n                    cls = 'wfu-json-string';\n                }\n            } else if (/true|false/.test(match)) {\n                cls = 'wfu-json-boolean';\n            } else if (/null/.test(match)) {\n                cls = 'wfu-json-null';\n            }\n            return '<span class=\"' + cls + '\">' + match + '</span>';\n        });\n\n}\n\nexport var displayDataAsHtml = function (el, data) {\n\n//    var json = formatJson(data);\n\n    // Create <pre> element\n    $(el).html(\"<pre class='wfu-code'></pre>\");\n\n    // Populate <pre> element with formatted JSON data\n    $(el).children(\"pre\").html(\n        formatJsonAsHtml(data)\n    );\n\n}\n\n*/\n\n//#endregion \n\n\n\n//#region Macros\n\n/* expandMacrosInElement\n * Expands {{ var }} constructs in an elements innerHtml\n * using dictionary lookup, and replaces the element content.\n */\n\nexport function expandMacrosInElement (el: HTMLElement, dict: Map<string, string>): void {\n    let html = el.innerHTML;\n\n    html = expandMacrosInText(html, dict);\n\n    el.innerHTML = html;\n}\n\n/* expandMacrosInText\n * Expands {{ var }} constructs in text\n */\n\nexport const expandMacrosInText = (text: string, dict: Map<string, string>): string => {\n    // Must be positioned before regex replace call\n    const replacer = (match: string, p1: string, p2: string, p3: string, offset: number, string: string): string => {\n        return dict.get(p2) || '';\n    }\n\n    text = text.replace(\n        /{\\s*(?<cmd>\\w*)\\s*\\{\\s*(?<params>\\w*)\\s*\\}\\s*(?<options>\\w*)\\s*\\}/g,\n        replacer\n    );\n\n    return text;\n}\n\n\n\n/*\n\nexport var expandMacrosInElement = function (el, dict) {\n\n    var html = $(el).html();\n\n    html = expandMacrosInText(html, dict);\n\n    $(el).html(\n        html\n    );\n\n}\n\n\nexport var expandMacrosInText = function (text, dict) {\n\n\n\n    // https://regexr.com/\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n    // Must be positioned before regex replace call\n    var replacer = function (match, p1, p2, p3, offset, string) {\n\n        return dict.get(p2);\n    }\n\n    text = text.replace(\n        /{\\s*(?<cmd>\\w*)\\s*\\{\\s*(?<params>\\w*)\\s*\\}\\s*(?<options>\\w*)\\s*\\}/g,\n        replacer\n    );\n\n    return text;\n}\n\n*/\n\n\n//#endregion\n\n/**\n * Sequence a group of items\n * @param groupElement \n */\n\nexport function sequence (groupElement: HTMLElement): void {\n \n    // Get the group name\n    const groupName = groupElement.getAttribute(\"wfu-seq-group\");\n    console.log(\"sequence group\", groupName)\n\n    // Find matching items \n    let i = 0;\n    const elements = groupElement.querySelectorAll(`[wfu-seq=\"${groupName}\"]`);\n    elements.forEach((element: Element) => {\n        element.innerHTML = (++i).toString();\n    }); \n}\n\n\n/*\n\nexport var sequence = function (l) {\n\n    const $group = $(l);\n    \n    // Get the group name\n    const groupName = $group.attr(\"wfu-seq-group\");\n\n    // Find matching items \n    var i = 0;\n    $group.find(`[wfu-seq=\"${groupName}\"]`).each(function() {\n        $(this).html(++i);\n    }); \n\n}\n\n*/\n\n\n/**\n * Shuffle array randomly\n * Fisher-Yates (also known as Knuth) shuffle \n * iterates over the array from the last element to the first, randomly choosing an element in the unshuffled portion of the array and swapping it with the current element. This provides a uniform distribution of array permutations.\n * @param array \n * @returns \n */\n\nexport function shuffleArray(array: any[]) {\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n}\n\n\n\n", "\n/*\n * webflow-membership\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Member Information Utilities\n */\n\nimport { XXH64 } from '../webflow-crypto';\nimport { toTitleCase, getCookie } from '../utils';\n//import { WfuDebug } from './webflow-core.js';\n\nimport { Sa5Core } from '../webflow-core';\nimport { Sa5Debug } from '../webflow-core/debug';\n\n    \n\n\n/*\n * User class.\n */\n\n//import Md5 from \"crypto-api/src/hasher/md5\";\nexport class Sa5User {\n\n    // Track what data has been loaded\n    user_data_loaded = {\n        email: false,\n        account_info: false,\n        custom_fields: false,\n        access_groups: false,\n        direct: false,\n    };\n\n    // Webflow data\n    user_id; // Webflow user_id\n\n    get user_id_alt() {\n        if (!this.email)\n            return undefined;\n\n        return XXH64.hash(this.email);\n    }\n\n    accept_communications;\n\n    email;\n\n    name;\n\n    get name_short_clean() {\n\n        if (!this.email)\n            return undefined;\n\n        // if (this.email == {}) \n        //     return undefined;\n\n        return this.email.split(\"@\")[0];\n    }\n    get name_short() { // @ segment of email\n\n        if (!this.email)\n            return undefined;\n\n        return this.name_short_clean + '@';\n    }\n    get name_short_tcase() {\n\n        if (!this.email)\n            return undefined;\n\n        return toTitleCase(this.name_short_clean);\n    }\n   \n    // access-groups\n    access_groups = [];\n\n    // User data\n    data = {}; // = new Map();\n\n    // Meta data\n    meta = {}; //  = new Map(); \n\n    // Raw data\n    raw = {}; \n\n    // Direct data \n    direct = {}; \n\n    constructor() {\n\n    }\n\n    isLoggedIn = function() {\n\n        return getCookie(\"wf_loggedin\") || false;\n    }\n\n    fromJSON(json) {\n\n        if (!json)\n            return; // no data to load \n\n        this.user_id = json.user_id;\n        this.name = json.name;\n        this.email = json.email;\n\n        this.accept_communications = json.accept_communications; \n        this.access_groups = json.access_groups;\n\n        this.data = json.data;\n\n        this.user_data_loaded.email = json.user_data_loaded.email;\n        this.user_data_loaded.account_info = json.user_data_loaded.account_info;\n        this.user_data_loaded.custom_fields = json.user_data_loaded.custom_fields;\n        this.user_data_loaded.access_groups = json.user_data_loaded.access_groups;\n\n        this.raw = json.raw; \n        \n    }\n\n    /** \n    toJSON2() {\n        return {\n            \"user_id\": this.user_id,\n            \"name\": this.name,\n            \"email\": this.email,\n            \"accept_communications\": this.accept_communications,\n            \"access_groups\": this.access_groups, \n            \"user_data_loaded\": {\n                \"email\": this.email,\n                \"account_info\": this.account_info,\n                \"custom_fields\": this.custom_fields,\n                \"access_groups\": this.access_groups\n            }\n        }\n    }\n    */\n\n}\n\n"],
  "mappings": "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",
  "names": []
}
