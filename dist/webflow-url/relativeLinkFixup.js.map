{
  "version": 3,
  "sources": ["../../src/webflow-url/relativeLinkFixup.ts"],
  "sourcesContent": ["\n/*\n * query\n * \n * Sygnal Technology Group\n * https://www.sygnal.com\n * \n * Url Utilities\n */\n\nimport { Sa5Core } from '../webflow-core'\n\n/*\n * Link-processing functions.\n * Fixues up //self/ relative links for CMS.\n */\n\nexport class WfuRelativeLinkFixup {\n\n//    config; // Optional config\n    private _element: HTMLElement;\n\n    // TODO: Support alternatives \n\n    constructor(element: HTMLElement) {\n\n        this._element = element;\n//        this.config = config;\n\n    }\n\n    // Process elements with the custom attr wfu-query-param\n    init() {\n\n        // Case insensitive jQuery attribute selector\n        // https://stackoverflow.com/a/38923109\n\n        // Fixup broken Webflow relative links\n        // where it prepends http://.\n        // Valid links should include \n        // ./sdlfj\n        // lksdfj\n        // ?lkdsfj\n\n        // Get all 'a' elements with 'href' attribute containing '//self/'\n        let elems = Array.from(\n            this._element.querySelectorAll(\n                \"a[href^='http://.' i], a[href^='https://.' i], a[href^='http://?' i], a[href^='https://?' i]\"));\n\n        elems.forEach((elem) => {\n            // Get the href attribute\n            let href = elem.getAttribute('href');\n\n            if (href) {\n\n                // Create a new href\n                if(href.startsWith(\"http://.\"))\n                    href = href.substring(8);\n                if(href.startsWith(\"https://.\"))\n                    href = href.substring(9);\n                if(href.startsWith(\"http://?\"))\n                    href = href.substring(7);\n                if(href.startsWith(\"https://?\"))\n                    href = href.substring(8);\n\n                // Set the href attribute to the pathname of the URL\n                elem.setAttribute('href', href);\n            }\n        });\n\n\n        // Get all 'a' elements with 'href' attribute containing '//self/'\n        let elements = Array.from(\n            this._element.querySelectorAll(\"a[href*='//self/' i], a[href$='//self' i]\"));\n\n        elements.forEach((element) => {\n            // Get the href attribute\n            let originalHref = element.getAttribute('href');\n\n            if (originalHref) {\n                // Create a new URL object\n                const originalUrl = new URL(originalHref);\n\n                // Create relative path\n                let relativeHref: string = originalUrl.pathname + originalUrl.search + originalUrl.hash;\n\n                // Set the href attribute to the pathname of the URL\n                element.setAttribute('href', relativeHref);\n            }\n        });\n\n    }\n\n}"],
  "mappings": ";;AAiBO,MAAM,uBAAN,MAA2B;AAAA,IAO9B,YAAY,SAAsB;AAE9B,WAAK,WAAW;AAAA,IAGpB;AAAA,IAGA,OAAO;AAaH,UAAI,QAAQ,MAAM;AAAA,QACd,KAAK,SAAS;AAAA,UACV;AAAA,QAA8F;AAAA,MAAC;AAEvG,YAAM,QAAQ,CAAC,SAAS;AAEpB,YAAI,OAAO,KAAK,aAAa,MAAM;AAEnC,YAAI,MAAM;AAGN,cAAG,KAAK,WAAW,UAAU;AACzB,mBAAO,KAAK,UAAU,CAAC;AAC3B,cAAG,KAAK,WAAW,WAAW;AAC1B,mBAAO,KAAK,UAAU,CAAC;AAC3B,cAAG,KAAK,WAAW,UAAU;AACzB,mBAAO,KAAK,UAAU,CAAC;AAC3B,cAAG,KAAK,WAAW,WAAW;AAC1B,mBAAO,KAAK,UAAU,CAAC;AAG3B,eAAK,aAAa,QAAQ,IAAI;AAAA,QAClC;AAAA,MACJ,CAAC;AAID,UAAI,WAAW,MAAM;AAAA,QACjB,KAAK,SAAS,iBAAiB,2CAA2C;AAAA,MAAC;AAE/E,eAAS,QAAQ,CAAC,YAAY;AAE1B,YAAI,eAAe,QAAQ,aAAa,MAAM;AAE9C,YAAI,cAAc;AAEd,gBAAM,cAAc,IAAI,IAAI,YAAY;AAGxC,cAAI,eAAuB,YAAY,WAAW,YAAY,SAAS,YAAY;AAGnF,kBAAQ,aAAa,QAAQ,YAAY;AAAA,QAC7C;AAAA,MACJ,CAAC;AAAA,IAEL;AAAA,EAEJ;",
  "names": []
}
