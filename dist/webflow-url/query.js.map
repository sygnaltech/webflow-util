{
  "version": 3,
  "sources": ["../../src/webflow-url/query.ts"],
  "sourcesContent": ["\n/*\n * query\n * Adds querystring data to specific tagged elements.\n * \n * Sygnal Technology Group\n * https://www.sygnal.com\n * \n * Url Utilities\n */\n\nimport { Sa5Core } from '../webflow-core'\n\n\n\nexport class WfuQuery {\n\n//    config; // Optional config\n\n    constructor() {\n\n//        this.config = config;\n\n    }\n\n    // Process elements with the custom attr wfu-query-param\n    init() {\n\n        const urlParams: URLSearchParams = new URLSearchParams(window.location.search);\n\n        // Skip if there is no querystring\n        if (Array.from(urlParams).length == 0)\n            return;\n\n        const that = this;\n\n        // Loop all processable elements\n        // - All <a> elements\n        // - Any element tagged with [wfu-query-param]=?\n        // TODO: ignore elems tagged [wfu-query-param]=- or eleme within a DIV tagged as such? \n\n        // Get all elements with 'wfu-query-param' attribute and all 'a' elements\n        let elements = Array.from(\n            document.querySelectorAll('*[wfu-query-param], a'));\n        \n        elements.forEach((element) => {\n            let wfuQueryParam = element.getAttribute('wfu-query-param');\n        \n            if (element.tagName.toLowerCase() === 'input' && wfuQueryParam) {\n                // For INPUT elements, set the value param\n                (element as HTMLInputElement).value = urlParams.get(wfuQueryParam) || '';\n            } else if (element.tagName.toLowerCase() === 'a') {\n                // FORMS\n                // IFRAMES \n\n                // DISABLED: temporarily \n//                this.processLink(element as HTMLLinkElement);\n            } else if (wfuQueryParam) {\n                // For anything else, set the inner text\n                element.textContent = urlParams.get(wfuQueryParam) || '';\n            }\n        });\n\n    }\n\n    processLink(linkElem: HTMLLinkElement) {\n\n        const urlParams = new URLSearchParams(window.location.search);\n\n        // Skip if no href\n        if (linkElem.getAttribute(\"href\") == null)\n            return;\n\n        // Disassemble url \n        var hrefParts = linkElem.getAttribute(\"href\").split(\"?\");\n        var hrefBase = hrefParts[0];\n        var hrefQuery = hrefParts[1];\n\n        const newParams = new URLSearchParams(hrefQuery);\n\n        // Handle suppressed elements\n        if (linkElem.getAttribute(\"wfu-query-param\") == '-') {\n\n            // Skip, do nothing\n            //        console.log(`Processing - / ${linkElem.attr(\"href\")}`);\n\n            // Handle all-params elements \n            // https://stackoverflow.com/questions/1318076/jquery-hasattr-checking-to-see-if-there-is-an-attribute-on-an-element\n        } else if (linkElem.getAttribute(\"wfu-query-param\") == '*' || linkElem.getAttribute(\"wfu-query-param\") == undefined || linkElem.hasAttribute(\"wfu-query-param\") == false) {\n\n            //        console.log(`Processing * / ${linkElem.attr(\"href\")} / ${hrefBase} / ${hrefQuery}`);\n\n            //        linkElem.text(`${linkElem.text()} - WILDCARD`);\n\n            // Merge querystrings\n            // overrwrites any conflicting params with new ones\n            for (let p of urlParams) {\n                newParams.set(p[0], urlParams.get(p[0]));\n            };\n\n            // Replaces whole querystring, preserving nothing\n            var newHref = hrefBase + '?' + newParams.toString();\n\n            // Update link href\n            linkElem.setAttribute(\"href\", newHref);\n\n            // Handle specific-params \n        } else {\n\n            //        console.log(`Process MULTI / ${linkElem.attr(\"href\")} / ${hrefBase} / ${hrefQuery}`);\n\n            // Duplicate params risk \n            // https://stackoverflow.com/a/60828146 \n\n            // Iterate through params and append\n            // e.g. [wfu-query-param]=\"foo,bar,bat\"\n            var overrideParams = linkElem.getAttribute(\"wfu-query-param\").split(\",\");\n\n            for (let p of overrideParams) {\n                if (urlParams.get(p) != null)\n                    newParams.set(p, urlParams.get(p));\n            };\n\n            var newHref = hrefBase + '?' + newParams.toString();\n\n            // Update link href\n            linkElem.setAttribute(\"href\", newHref);\n        }\n\n    }\n\n}\n"],
  "mappings": ";;AAeO,MAAM,WAAN,MAAe;AAAA,IAIlB,cAAc;AAAA,IAId;AAAA,IAGA,OAAO;AAEH,YAAM,YAA6B,IAAI,gBAAgB,OAAO,SAAS,MAAM;AAG7E,UAAI,MAAM,KAAK,SAAS,EAAE,UAAU;AAChC;AAEJ,YAAM,OAAO;AAQb,UAAI,WAAW,MAAM;AAAA,QACjB,SAAS,iBAAiB,uBAAuB;AAAA,MAAC;AAEtD,eAAS,QAAQ,CAAC,YAAY;AAC1B,YAAI,gBAAgB,QAAQ,aAAa,iBAAiB;AAE1D,YAAI,QAAQ,QAAQ,YAAY,MAAM,WAAW,eAAe;AAE5D,UAAC,QAA6B,QAAQ,UAAU,IAAI,aAAa,KAAK;AAAA,QAC1E,WAAW,QAAQ,QAAQ,YAAY,MAAM,KAAK;AAAA,QAMlD,WAAW,eAAe;AAEtB,kBAAQ,cAAc,UAAU,IAAI,aAAa,KAAK;AAAA,QAC1D;AAAA,MACJ,CAAC;AAAA,IAEL;AAAA,IAEA,YAAY,UAA2B;AAEnC,YAAM,YAAY,IAAI,gBAAgB,OAAO,SAAS,MAAM;AAG5D,UAAI,SAAS,aAAa,MAAM,KAAK;AACjC;AAGJ,UAAI,YAAY,SAAS,aAAa,MAAM,EAAE,MAAM,GAAG;AACvD,UAAI,WAAW,UAAU;AACzB,UAAI,YAAY,UAAU;AAE1B,YAAM,YAAY,IAAI,gBAAgB,SAAS;AAG/C,UAAI,SAAS,aAAa,iBAAiB,KAAK,KAAK;AAAA,MAOrD,WAAW,SAAS,aAAa,iBAAiB,KAAK,OAAO,SAAS,aAAa,iBAAiB,KAAK,UAAa,SAAS,aAAa,iBAAiB,KAAK,OAAO;AAQtK,iBAAS,KAAK,WAAW;AACrB,oBAAU,IAAI,EAAE,IAAI,UAAU,IAAI,EAAE,EAAE,CAAC;AAAA,QAC3C;AAAC;AAGD,YAAI,UAAU,WAAW,MAAM,UAAU,SAAS;AAGlD,iBAAS,aAAa,QAAQ,OAAO;AAAA,MAGzC,OAAO;AASH,YAAI,iBAAiB,SAAS,aAAa,iBAAiB,EAAE,MAAM,GAAG;AAEvE,iBAAS,KAAK,gBAAgB;AAC1B,cAAI,UAAU,IAAI,CAAC,KAAK;AACpB,sBAAU,IAAI,GAAG,UAAU,IAAI,CAAC,CAAC;AAAA,QACzC;AAAC;AAED,YAAI,UAAU,WAAW,MAAM,UAAU,SAAS;AAGlD,iBAAS,aAAa,QAAQ,OAAO;AAAA,MACzC;AAAA,IAEJ;AAAA,EAEJ;",
  "names": []
}
