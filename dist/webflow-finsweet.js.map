{
  "version": 3,
  "sources": ["../src/webflow-finsweet/fs-load.ts", "../src/webflow-finsweet.ts"],
  "sourcesContent": ["\n/*\n * SA5 \n * webflow-finsweet | fs-load\n * \n * Sygnal Technology Group\n * https://www.sygnal.com\n * \n * For extensions to Finsweet's Load Attributes\n */\n\n// Extend the Window interface to include fsAttributes and listInstance\ninterface FinsweetWindow extends Window {\n    fsAttributes: [string, (listInstances: any[]) => void][];\n    listInstance?: any; // Assuming listInstance can be any type; specify a more precise type if possible\n  }\n  \ndeclare let window: FinsweetWindow;\n\nwindow.fsAttributes = window.fsAttributes || [];\n\nexport class Sa5FinsweetLoad {\n\n    config; // Optional config\n\n    constructor(config = {}) {\n\n        this.config = config;\n\n    }\n\n    sortRandom(): void {\n        // Ensure listInstance is defined before attempting to access its properties\n        if (!window.listInstance) {\n            console.log('listInstance is not defined.');\n            return;\n        }\n\n        const { items } = window.listInstance;\n\n        console.log(\"items\", items);\n\n        // Function to shuffle array items in place\n        function shuffleArray(array: any[]): void { // Ideally, replace `any[]` with a more specific type\n            for (let i = array.length - 1; i > 0; i--) {\n                // Generate random index\n                const j = Math.floor(Math.random() * (i + 1));\n                // Swap elements array[i] and array[j]\n                [array[i], array[j]] = [array[j], array[i]];\n            }\n        }\n\n        // Shuffle the items array\n        shuffleArray(items);\n\n        // Assuming listInstance has a method named renderItems\n        // The existence of listInstance is checked at the beginning of the sort function\n        window.listInstance.renderItems();\n    }\n\n    init(): void {\n\n        window.fsAttributes.push([\n            'cmsload',\n            (listInstances: any[]) => { // Replace `any[]` with a more specific type if known\n              console.log('cmsload Successfully loaded!');\n          \n              const [listInstance] = listInstances;\n          \n              // Assign listInstance to the window object\n              window.listInstance = listInstance;\n          \n              // Call sort function\n              this.sortRandom();\n              \n              // Assuming listInstance has an 'on' method; adjust types as necessary\n              listInstance.on('renderitems', (renderedItems: any) => { // Replace `any` with a more specific type if known\n                console.log(\"renderedItems\", renderedItems);\n              });\n            },\n        ]);\n\n        // On DOM ready \n        document.addEventListener('DOMContentLoaded', () => {\n        \n            // Get the button element by its ID\n            const sortButton = document.getElementById('sort');\n        \n            // Add a click event listener to the button if it exists\n            sortButton?.addEventListener('click', this.sortRandom);\n        \n        });\n  \n\n\n    }\n\n}\n", "\n/**\n * SA5\n * webflow-finsweet\n * \n * Extensions and helper utils for Finsweet Attributes\n */\n\nimport { Sa5FinsweetLoad } from \"./webflow-finsweet/fs-load\";\n\n\n\nexport class Sa5Finsweet { \n\n    fsLoad: Sa5FinsweetLoad;\n\n    constructor() {\n\n        this.fsLoad = new Sa5FinsweetLoad();\n\n    }\n\n    public init(): void {\n\n        // Init FS Load extensions\n        this.fsLoad.init(); \n\n    }\n\n}"],
  "mappings": ";;AAmBA,SAAO,eAAe,OAAO,gBAAgB,CAAC;AAEvC,MAAM,kBAAN,MAAsB;AAAA,IAIzB,YAAY,SAAS,CAAC,GAAG;AAErB,WAAK,SAAS;AAAA,IAElB;AAAA,IAEA,aAAmB;AAEf,UAAI,CAAC,OAAO,cAAc;AACtB,gBAAQ,IAAI,8BAA8B;AAC1C;AAAA,MACJ;AAEA,YAAM,EAAE,MAAM,IAAI,OAAO;AAEzB,cAAQ,IAAI,SAAS,KAAK;AAG1B,eAAS,aAAa,OAAoB;AACtC,iBAAS,IAAI,MAAM,SAAS,GAAG,IAAI,GAAG,KAAK;AAEvC,gBAAM,IAAI,KAAK,MAAM,KAAK,OAAO,KAAK,IAAI,EAAE;AAE5C,WAAC,MAAM,IAAI,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;AAAA,QAC9C;AAAA,MACJ;AAGA,mBAAa,KAAK;AAIlB,aAAO,aAAa,YAAY;AAAA,IACpC;AAAA,IAEA,OAAa;AAET,aAAO,aAAa,KAAK;AAAA,QACrB;AAAA,QACA,CAAC,kBAAyB;AACxB,kBAAQ,IAAI,8BAA8B;AAE1C,gBAAM,CAAC,YAAY,IAAI;AAGvB,iBAAO,eAAe;AAGtB,eAAK,WAAW;AAGhB,uBAAa,GAAG,eAAe,CAAC,kBAAuB;AACrD,oBAAQ,IAAI,iBAAiB,aAAa;AAAA,UAC5C,CAAC;AAAA,QACH;AAAA,MACJ,CAAC;AAGD,eAAS,iBAAiB,oBAAoB,MAAM;AAGhD,cAAM,aAAa,SAAS,eAAe,MAAM;AAGjD,oBAAY,iBAAiB,SAAS,KAAK,UAAU;AAAA,MAEzD,CAAC;AAAA,IAIL;AAAA,EAEJ;;;ACrFO,MAAM,cAAN,MAAkB;AAAA,IAIrB,cAAc;AAEV,WAAK,SAAS,IAAI,gBAAgB;AAAA,IAEtC;AAAA,IAEO,OAAa;AAGhB,WAAK,OAAO,KAAK;AAAA,IAErB;AAAA,EAEJ;",
  "names": []
}
