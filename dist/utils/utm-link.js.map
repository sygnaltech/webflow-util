{
  "version": 3,
  "sources": ["../../src/utils/utm-link.ts"],
  "sourcesContent": ["/*\n * SA5 \n * UTM Link \n */ \n\nexport class Sa5UtmLink {\n\n    elem: HTMLAnchorElement;\n\n    constructor(link: HTMLAnchorElement) {\n        this.elem = link;\n    }\n  \n    init() {\n\n        this.elem.href = Sa5UtmLink.applyUTMParametersFromAttrs(this.elem.href, this.elem);\n                    \n    }\n\n    static applyUTMParametersFromAttrs(urlString: string, utmElem: HTMLElement): string {\n        const url = new URL(urlString);\n        const params = url.searchParams;\n    \n        // Custom attribute names\n        const utmAttributes = {\n          'wfu-link-utm-source': 'utm_source',\n          'wfu-link-utm-medium': 'utm_medium',\n          'wfu-link-utm-campaign': 'utm_campaign',\n          'wfu-link-utm-content': 'utm_content'\n        };\n    \n        // Update UTM parameters if custom attributes exist\n        for (const [customAttr, utmParam] of Object.entries(utmAttributes)) {\n          const attrValue = utmElem.getAttribute(customAttr);\n          if (attrValue) {\n            params.set(utmParam, encodeURIComponent(attrValue));\n          }\n        }\n    \n        // Update the anchor element's href with the new query string\n        return url.toString();\n      }\n}\n"],
  "mappings": ";;AAKO,MAAM,aAAN,MAAiB;AAAA,IAIpB,YAAY,MAAyB;AACjC,WAAK,OAAO;AAAA,IAChB;AAAA,IAEA,OAAO;AAEH,WAAK,KAAK,OAAO,WAAW,4BAA4B,KAAK,KAAK,MAAM,KAAK,IAAI;AAAA,IAErF;AAAA,IAEA,OAAO,4BAA4B,WAAmB,SAA8B;AAChF,YAAM,MAAM,IAAI,IAAI,SAAS;AAC7B,YAAM,SAAS,IAAI;AAGnB,YAAM,gBAAgB;AAAA,QACpB,uBAAuB;AAAA,QACvB,uBAAuB;AAAA,QACvB,yBAAyB;AAAA,QACzB,wBAAwB;AAAA,MAC1B;AAGA,iBAAW,CAAC,YAAY,QAAQ,KAAK,OAAO,QAAQ,aAAa,GAAG;AAClE,cAAM,YAAY,QAAQ,aAAa,UAAU;AACjD,YAAI,WAAW;AACb,iBAAO,IAAI,UAAU,mBAAmB,SAAS,CAAC;AAAA,QACpD;AAAA,MACF;AAGA,aAAO,IAAI,SAAS;AAAA,IACtB;AAAA,EACN;",
  "names": []
}
