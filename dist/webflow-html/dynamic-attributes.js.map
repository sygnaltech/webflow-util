{
  "version": 3,
  "sources": ["../../src/webflow-core/debug.ts", "../../src/webflow-html/dynamic-attributes.ts"],
  "sourcesContent": ["\n/*\n * webflow-core\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Debug Utilities\n */\n\n\n\nexport class Sa5Debug {\n    \n    private localStorageDebugFlag: string = 'sa5-debug';\n\n    private _enabled: boolean = false;\n    private _label: string;\n\n    // Get or set WFU persistent debug state\n    // which is stored in localStorage. \n    get persistentDebug(): boolean {\n        return Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n    }\n    set persistentDebug(active: boolean) {\n        if (active) {\n            localStorage.setItem(this.localStorageDebugFlag, \"true\");\n            console.debug (\"sa5-core debug enabled (persistent).\");\n        } else {\n            localStorage.removeItem(this.localStorageDebugFlag); \n            console.debug (\"sa5-core debug disabled (persistent).\");\n        }\n    }\n\n    // Enable/disable debugging \n    get enabled(): boolean {\n\n        // localStorage is checked for a debug flag, to enable remote debug enabling \n        // Any non-null string value will resolve to TRUE here, including the string \"false\" \n        var wfuDebugValue = Boolean(localStorage.getItem(this.localStorageDebugFlag)); \n\n        // Or this with the current debug state\n        // If either is enabled, debugging is on \n        wfuDebugValue = wfuDebugValue || this._enabled; \n\n        return wfuDebugValue;\n    }\n    set enabled(active: boolean) {\n        this._enabled = active;\n    }\n\n\n    // Initialize\n    constructor(label: string) {\n\n        // Save the label, for console logging\n        this._label = label;\n\n    }\n\n\n    // Start a console log group\n    group(name) {\n        if (this.enabled)\n            console.group(name);\n    }\n\n    // End a console log group\n    groupEnd() {\n        if (this.enabled)\n            console.groupEnd();\n    }\n\n    // Log debug data to the console\n    debug(...args: any[]): void {\n\n        if (this.enabled)\n            // Unlimited arguments in a JavaScript function\n            // https://stackoverflow.com/a/6396066\n            console.debug(this._label, ...args); \n            \n    }\n\n}\n\n\n", "\n\n/*\n * webflow-html\n * Dynamic Attributes\n * \n * Sygnal Technology Group\n * http://sygnal.com\n * \n * Applies all x- prefixed attributes to their elements without the prefix.\n * Designed to overcome limitations with Webflow's custom attributes reserved names. \n * Best paired with the new CMS databinding feature of Webflow's custom attributes. \n */\n\n\nimport { Sa5Debug } from '../webflow-core/debug';\n\n\n\ninterface Config {\n}\n\n\nexport class Sa5HtmlDynamicAttributes {\n    config: Config;\n\n    constructor(config: Config) {\n        this.config = config;\n    }\n\n    init() {\n\n        // Initialize debugging\n        let debug = new Sa5Debug(\"sa5-html\");\n        debug.debug (\"Dynamic attributes initialized.\", this.config);\n    \n        // Select all elements in the document\n        var allElements = document.querySelectorAll<HTMLElement>('*');\n\n        // Iterate over all elements\n        allElements.forEach(element => {\n            // Iterate over all attributes of each element\n            Array.from(element.attributes).forEach(attr => {\n            // Check if attribute name starts with 'x-'\n            if (attr.name.startsWith('x-')) {\n                // Create a new attribute name by removing 'x-'\n                const newAttrName = attr.name.slice(2);\n    \n                // Set the new attribute on the element with the same value as the old attribute\n                element.setAttribute(newAttrName, attr.value);\n    \n                // Special case: if element is a textarea and newAttrName is \"input\"\n                switch(element.tagName.toLowerCase()) {\n                    case \"textarea\":\n                        if (newAttrName === 'value') \n                            (element as HTMLTextAreaElement).value = attr.value;\n                        break;\n                }\n\n                // Optional: log the new attribute for debugging\n                debug.debug(`Element: ${element.tagName}, New Attribute: ${newAttrName}, Value: ${attr.value}`);\n            }\n            });\n        });\n\n//         // Iterate over all elements\n//         allElements.forEach(element => {\n\n//             // Iterate over all attributes of each element\n//             for (var i = 0; i < element.attributes.length; i++) {\n//                 var attr = element.attributes[i]; \n\n//                 // Check if attribute name starts with 'x-'\n//                 if (attr.name.startsWith('x-')) {\n//                     // Do something with the element or attribute\n\n//                     var newAttrName = attr.name.slice(2);\n//                     // Set the new attribute on the element with the same value as the old attribute\n//                     element.setAttribute(newAttrName, attr.value);\n\n//                     // Special element handling\n// //                    switch(element.typ)\n\n// //                    console.log('Element:', element, 'Attribute:', attr.name, 'Value:', attr.value);\n//                 }\n//             }\n\n//         });\n\n    }\n\n}\n  \n// Register\n// window[\"sa5\"] = window[\"sa5\"] || []; // {};\n// window[\"sa5\"][\"Sa5HtmlDynamicAttributes\"] = Sa5HtmlDynamicAttributes;\n\n\n"],
  "mappings": ";;AAYO,MAAM,WAAN,MAAe;AAAA,IAyClB,YAAY,OAAe;AAvC3B,WAAQ,wBAAgC;AAExC,WAAQ,WAAoB;AAwCxB,WAAK,SAAS;AAAA,IAElB;AAAA,IArCA,IAAI,kBAA2B;AAC3B,aAAO,QAAQ,aAAa,QAAQ,KAAK,qBAAqB,CAAC;AAAA,IACnE;AAAA,IACA,IAAI,gBAAgB,QAAiB;AACjC,UAAI,QAAQ;AACR,qBAAa,QAAQ,KAAK,uBAAuB,MAAM;AACvD,gBAAQ,MAAO,sCAAsC;AAAA,MACzD,OAAO;AACH,qBAAa,WAAW,KAAK,qBAAqB;AAClD,gBAAQ,MAAO,uCAAuC;AAAA,MAC1D;AAAA,IACJ;AAAA,IAGA,IAAI,UAAmB;AAInB,UAAI,gBAAgB,QAAQ,aAAa,QAAQ,KAAK,qBAAqB,CAAC;AAI5E,sBAAgB,iBAAiB,KAAK;AAEtC,aAAO;AAAA,IACX;AAAA,IACA,IAAI,QAAQ,QAAiB;AACzB,WAAK,WAAW;AAAA,IACpB;AAAA,IAaA,MAAM,MAAM;AACR,UAAI,KAAK;AACL,gBAAQ,MAAM,IAAI;AAAA,IAC1B;AAAA,IAGA,WAAW;AACP,UAAI,KAAK;AACL,gBAAQ,SAAS;AAAA,IACzB;AAAA,IAGA,SAAS,MAAmB;AAExB,UAAI,KAAK;AAGL,gBAAQ,MAAM,KAAK,QAAQ,GAAG,IAAI;AAAA,IAE1C;AAAA,EAEJ;;;AC5DO,MAAM,2BAAN,MAA+B;AAAA,IAGlC,YAAY,QAAgB;AACxB,WAAK,SAAS;AAAA,IAClB;AAAA,IAEA,OAAO;AAGH,UAAI,QAAQ,IAAI,SAAS,UAAU;AACnC,YAAM,MAAO,mCAAmC,KAAK,MAAM;AAG3D,UAAI,cAAc,SAAS,iBAA8B,GAAG;AAG5D,kBAAY,QAAQ,aAAW;AAE3B,cAAM,KAAK,QAAQ,UAAU,EAAE,QAAQ,UAAQ;AAE/C,cAAI,KAAK,KAAK,WAAW,IAAI,GAAG;AAE5B,kBAAM,cAAc,KAAK,KAAK,MAAM,CAAC;AAGrC,oBAAQ,aAAa,aAAa,KAAK,KAAK;AAG5C,oBAAO,QAAQ,QAAQ,YAAY,GAAG;AAAA,cAClC,KAAK;AACD,oBAAI,gBAAgB;AAChB,kBAAC,QAAgC,QAAQ,KAAK;AAClD;AAAA,YACR;AAGA,kBAAM,MAAM,YAAY,QAAQ,2BAA2B,uBAAuB,KAAK,OAAO;AAAA,UAClG;AAAA,QACA,CAAC;AAAA,MACL,CAAC;AAAA,IA0BL;AAAA,EAEJ;",
  "names": []
}
